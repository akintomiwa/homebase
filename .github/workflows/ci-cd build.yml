#workflows/ci-cd.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Build and push backend Docker image
    - name: Build and push backend
      env:
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      run: |
        docker build -t yourdockerhubusername/backend:latest ./backend
        echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
        docker push yourdockerhubusername/backend:latest

    # Build and push frontend Docker image
    - name: Build and push frontend
      env:
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      run: |
        docker build -t yourdockerhubusername/frontend:latest ./frontend
        echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
        docker push yourdockerhubusername/frontend:latest


    # - name: Login to DockerHub
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Build and push backend image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: ./backend
    #     push: true
    #     tags: ${{ secrets.DOCKER_USERNAME }}/myapp-backend:latest

    # - name: Build and push frontend image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: ./frontend
    #     push: true
    #     tags: ${{ secrets.DOCKER_USERNAME }}/myapp-frontend:latest

    - name: Run Django tests
      run: |
        docker-compose -f docker-compose.yml up -d
        docker-compose exec backend python manage.py test


# #workflows/ci-cd.yml

# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     services:
#       db:
#         image: postgres:16
#         env:
#           POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
#           POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
#           POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#         ports:
#           - 5432:5432

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1

#     - name: Login to DockerHub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build and push backend image
#       uses: docker/build-push-action@v2
#       with:
#         context: ./backend
#         push: true
#         tags: ${{ secrets.DOCKER_USERNAME }}/myapp-backend:latest

#     - name: Build and push frontend image
#       uses: docker/build-push-action@v2
#       with:
#         context: ./frontend
#         push: true
#         tags: ${{ secrets.DOCKER_USERNAME }}/myapp-frontend:latest

#     - name: Run Django tests
#       run: |
#         docker-compose -f docker-compose.yml up -d
#         docker-compose exec backend python manage.py test
