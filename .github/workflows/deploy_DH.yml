name: Deploy Docker Container

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Copy files to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: scp -r -o StrictHostKeyChecking=no ./* root@141.136.42.157:/repo
        
      - name: SSH and Docker commands
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          VPS_HOST: ${{ secrets.SSH_HOST }}
          VPS_USERNAME: ${{ secrets.SSH_USERNAME }}
          VPS_SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          ssh -o StrictHostKeyChecking=no root@141.136.42.157 << 'EOF'
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username aakinonigbinde --password-stdin
            docker pull aakinonigbinde/myapp-backend:latest
            echo "Backend pull complete."
            docker pull aakinonigbinde/myapp-frontend:latest
            echo "Frontend pull complete."
            ls -al 
            pwd
            cd /repo 
            docker-compose -f docker-compose.yml down
            docker-compose -f docker-compose.yml up -d
            echo "Deployment Complete."
          EOF


# name: Deploy Docker Container

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
  
#     steps:
#       # SSH into VPS and deploy containers using Docker Compose
#       - name: Deploy to VPS
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.VPS_HOST }}
#           username: ${{ secrets.VPS_USERNAME }}
#           key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
#           port: ${{ secrets.VPS_SSH_PORT }}
#           script: |
#             ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
#             docker login -u $DOCKER_USERNAME --password-stdin <<< ${{ secrets.DOCKER_PASSWORD }}
#             docker pull aakinonigbinde/myapp-backend:latest
#             docker pull aakinonigbinde/myapp-frontend:latest
#             docker-compose -f /path/to/your/docker-compose.yml up -d
#             echo "Deployment Complete."
#         - name: Deploy using ssh
#           uses: appleboy/ssh-action@master
#           with:
#             host: ${{ secrets.SSH_HOST }}
#             username: ${{ secrets.SSH_USERNAME }}
#             password: ${{ secrets.SSH_PASSWORD }}
#             port: 22
#             script: |
#               cd /srv/expressjs/;docker stop expressjs;docker rm expressjs;docker pull gvgodfrey/expressjs:latest;docker-compose up -d

#       # - name: SSH and Docker commands
#       #   run: |
#       #     ssh -o StrictHostKeyChecking=no root@141.136.42.157 << 'EOF'
#       #       echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_PASSWORD }} --password-stdin
#       #       docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}"
#       #       docker pull aakinonigbinde/backend:latest
#       #       echo "Backend pull complete."
#       #       docker pull aakinonigbinde/frontend:latest
#       #       echo "Frontend pull complete."
#       #       docker-compose -f /homebase/docker-compose.yml up -d
#       #       echo "Deployment Complete."

#       #       docker stop frontend
#       #       docker rm frontend
#       #       docker stop backend
#       #       docker rm backend

#       #       docker run -p 8000:8000 -d --name backend aakinonigbinde/backend:latest
#       #       docker run -p 3000:3000 -d --name frontend aakinonigbinde/frontend:latest
#       #     EOF
#       #   env:
#       #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#       #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}


       